apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "wazuh-agent-daemonset.fullname" . }}
  labels:
    {{- include "wazuh-agent-daemonset.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "wazuh-agent-daemonset.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wazuh-agent-daemonset.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostPID: true
      hostIPC: true
      containers:
      - name: {{ .Chart.Name }}
        image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healz
            port: 5000
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 5
        ports:
          - name: agent-http
            containerPort: 5000
            protocol: TCP
        imagePullPolicy: Always
        securityContext:
          privileged: true
        resources:
          limits:
            memory: 512Mi
        env:
        - name: JOIN_MANAGER_MASTER_HOST
          value: {{ .Values.wazuh.JOIN_MANAGER_HOST }}
        - name: JOIN_MANAGER_WORKER_HOST
          value: {{ .Values.wazuh.JOIN_MANAGER_HOST }}
        - name: JOIN_MANAGER_PROTOCOL
          value: {{ .Values.wazuh.JOIN_MANAGER_PROTOCOL }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: WAZUH_GROUPS
          value: {{ .Values.wazuh.WAZUH_GROUPS }}
        - name: JOIN_MANAGER_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.wazuh.existingSecretName }}
              key: username
        - name: JOIN_MANAGER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.wazuh.existingSecretName }}
              key: password
        - name: JOIN_MANAGER_API_PORT
          value: {{ .Values.wazuh.JOIN_MANAGER_API_PORT | quote }}
        - name: JOIN_MANAGER_PORT
          value: {{ .Values.wazuh.JOIN_MANAGER_PORT | quote }}
        volumeMounts:
        - mountPath: /var/run
          name: var-run
        - mountPath: /host/dev
          name: dev
        - mountPath: /host/sys
          name: sys
          readOnly: true
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/etc
          name: etc
          readOnly: true
        - mountPath: /host/boot
          name: boot
          readOnly: true
        - mountPath: /host/usr
          name: usr
          readOnly: true
        - mountPath: /host/lib/modules
          name: modules
          readOnly: true
        - mountPath: /host/var/log
          name: log
          readOnly: true
        - mountPath: /var/ossec/ossec.jinja2
          subPath: ossec.jinja2
          name: agent-config
        - mountPath: /var/ossec/local_internal_options.jinja2
          subPath: "local_internal_options.jinja2"
          name: agent-config
      volumes:
      - name: agent-config
        configMap:
          name: agent-config
      - name: var-run
        hostPath:
          path: /var/run
      - name: dev
        hostPath:
          path: /dev
      - name: sys
        hostPath:
          path: /sys
      - name: proc
        hostPath:
          path: /proc
      - name: etc
        hostPath:
          path: /etc
      - name: boot
        hostPath:
          path: /boot
      - name: usr
        hostPath:
          path: /usr
      - name: modules
        hostPath:
          path: /lib/modules
      - name: log
        hostPath:
          path: /var/log
